dist: trusty
sudo: require

languge: cpp
compiler:
    - gcc
#    - clang

os:
    - linux

cache:
  directories:
  - $HOME/.ccache
  - $HOME/download

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-6
      - g++-6
      - make
      - cmake
      - libjsoncpp-dev
      #- libboost-all-dev

before_install:
  - env
  - export SRC_DIR="`pwd`"
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; brew install ninja; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-6" CC="gcc-6" BOOST_TOOLSET=gcc; fi
  - if [ "$CXX" = "clang++" ]; then export BOOST_TOOLSET=clang; fi
  # Install newer boost compatible with gcc 6.
  - export DOWNLOAD_ROOT="$HOME/download"; if [ ! -d "$DOWNLOAD_ROOT" ]; then mkdir -p "$DOWNLOAD_ROOT"; fi
  - export BOOST_DOWNLOAD_URL="http://sourceforge.net/projects/boost/files/boost/1.58.0/boost_1_58_0.tar.bz2/download"
  - export BOOST_ROOT="$TRAVIS_BUILD_DIR/../boost"
  - export CMAKE_MODULE_PATH="$BOOST_ROOT"
  - if [ ! -f "$DOWNLOAD_ROOT/boost.tar.bz2" ]; then wget --no-verbose --output-document="$DOWNLOAD_ROOT/boost.tar.bz2" "$BOOST_DOWNLOAD_URL"; fi
  - if [ ! -d "$BOOST_ROOT" ]; then mkdir -p "$BOOST_ROOT" && tar jxf "$DOWNLOAD_ROOT/boost.tar.bz2" --strip-components=1 -C "$BOOST_ROOT"; fi
  - if [ ! -f "$BOOST_ROOT/b2" ]; then cd "$BOOST_ROOT"; ./bootstrap.sh --with-toolset="$BOOST_TOOLSET" --with-libraries=program_options,system,thread,regex; fi

install:
  - ccache -V && ccache --show-stats && ccache --zero-stats
  - 'echo "using gcc : : ccache $CXX : <cflags>-std=c11 <cxxflags>-std=c++11 ;" > ~/user-config.jam'
  - 'echo "using clang : : ccache $CXX : <cflags>-std=c11 <cxxflags>-std=c++11 ;" >> ~/user-config.jam'
  - cd "$BOOST_ROOT"; ./b2 toolset="$BOOST_TOOLSET" threading=multi --prefix="$BOOST_ROOT" -d0 install

script:
  # Link gcc-6 and g++-6 to their standard commands
   - ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
   - ln -s /usr/bin/g++-6 /usr/local/bin/g++
  # Export CC and CXX to tell cmake which compiler to use
   - export CC=/usr/bin/gcc-6
   - export CXX=/usr/bin/g++-6
  # Check versions of gcc, g++ and cmake
   - gcc -v && g++ -v && cmake --version
  # Run your build commands next
   - cmake .
   - make && make test

